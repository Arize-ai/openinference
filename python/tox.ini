[tox]
isolated_build = True
skipsdist = True
envlist =
  py3{8,12}-ci-semconv
  py3{8,12}-ci-instrumentation
  py3{8,12}-ci-{bedrock,bedrock-latest}
  py3{9,12}-ci-{mistralai,mistralai-latest}
  py3{8,12}-ci-{openai,openai-latest}
  py3{8,12}-ci-{llama_index,llama_index-latest}
  py3{9,12}-ci-{dspy,dspy-latest}
  py3{8,12}-ci-{langchain,langchain-latest}
  py38-mypy-langchain_core

[testenv]
package = wheel
wheel_build_env = .pkg
deps =
  -r dev-requirements.txt
changedir =
  semconv: openinference-semantic-conventions/
  instrumentation: openinference-instrumentation/
  bedrock: instrumentation/openinference-instrumentation-bedrock/
  mistralai: instrumentation/openinference-instrumentation-mistralai/
  openai: instrumentation/openinference-instrumentation-openai/
  llama_index: instrumentation/openinference-instrumentation-llama-index/
  dspy: instrumentation/openinference-instrumentation-dspy/
  langchain: instrumentation/openinference-instrumentation-langchain/
  langchain_core: instrumentation/openinference-instrumentation-langchain/src
commands_pre =
  semconv: pip install {toxinidir}/openinference-semantic-conventions
  instrumentation: pip install {toxinidir}/openinference-instrumentation
  bedrock: pip install {toxinidir}/instrumentation/openinference-instrumentation-bedrock[test]
  bedrock-latest: pip install -U boto3
  mistralai: pip install {toxinidir}/instrumentation/openinference-instrumentation-mistralai[test]
  mistralai-latest: pip install -U mistralai
  openai: pip install {toxinidir}/instrumentation/openinference-instrumentation-openai[test]
  openai-latest: pip install -U openai
  llama_index: pip install {toxinidir}/instrumentation/openinference-instrumentation-llama-index[test]
  llama_index-latest: pip install -U llama-index llama-index-core
  dspy: pip install {toxinidir}/instrumentation/openinference-instrumentation-dspy[test]
  dspy-latest: pip install -U dspy-ai
  langchain: pip install {toxinidir}/instrumentation/openinference-instrumentation-langchain[test]
  langchain-latest: pip install -U langchain langchain_core langchain_openai langchain_community
  langchain_core: pip install {toxinidir}/instrumentation/openinference-instrumentation-langchain[type-check]
commands =
  ruff: ruff format {posargs:.}
  ruff: ruff check {posargs:.} --fix
  mypy: mypy {posargs:.}
  test: pytest {posargs:tests}
  ci: ruff format . --diff
  ci: ruff check . --no-fix
  ci: mypy .
  ci: pytest tests
