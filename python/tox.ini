[tox]
isolated_build = True
skipsdist = True
envlist =
  py3{8,12}-ci-semconv
  py3{8,12}-ci-instrumentation
  py3{8,12}-ci-{bedrock,bedrock-latest}
  py3{9,12}-ci-{mistralai,mistralai-latest}
  py3{8,12}-ci-{openai,openai-latest}
  py3{8,12}-ci-{vertexai,vertexai-latest}
  py3{8,12}-ci-{llama_index,llama_index-latest}
  py3{9,12}-ci-{dspy,dspy-latest}
  py3{8,12}-ci-{langchain,langchain-latest}
  py3{9,12}-ci-{guardrails,guardrails-latest}
  py3{10,12}-ci-{crewai,crewai-latest}
  py3{8,12}-ci-{haystack,haystack-latest}
  py3{8,12}-ci-{groq,groq-latest}
  py3{8,12}-ci-{litellm,litellm-latest}
  py3{9,12}-ci-{instructor,instructor-latest}
  py38-mypy-langchain_core

[testenv]
package = wheel
wheel_build_env = .pkg
deps =
  -r dev-requirements.txt
changedir =
  semconv: openinference-semantic-conventions/
  instrumentation: openinference-instrumentation/
  bedrock: instrumentation/openinference-instrumentation-bedrock/
  mistralai: instrumentation/openinference-instrumentation-mistralai/
  openai: instrumentation/openinference-instrumentation-openai/
  vertexai: instrumentation/openinference-instrumentation-vertexai/
  llama_index: instrumentation/openinference-instrumentation-llama-index/
  dspy: instrumentation/openinference-instrumentation-dspy/
  langchain: instrumentation/openinference-instrumentation-langchain/
  langchain_core: instrumentation/openinference-instrumentation-langchain/src
  guardrails: instrumentation/openinference-instrumentation-guardrails/
  crewai: instrumentation/openinference-instrumentation-crewai/
  haystack: instrumentation/openinference-instrumentation-haystack/
  groq: instrumentation/openinference-instrumentation-groq/
  litellm: instrumentation/openinference-instrumentation-litellm/
  instructor: instrumentation/openinference-instrumentation-instructor/
commands_pre =
  instrumentation: uv pip install --reinstall .[test]
  semconv: uv pip install --reinstall .[test]
  bedrock: uv pip install --reinstall .[test]
  bedrock-latest: uv pip install -U .[latest]
  mistralai: uv pip install --reinstall .[test]
  mistralai-latest: uv pip install -U .[latest]
  openai: uv pip install --reinstall .[test]
  openai-latest: uv pip install -U .[latest]
  vertexai: uv pip install --reinstall .[test]
  vertexai-latest: uv pip install -U .[latest]
  llama_index: uv pip install --reinstall .[test]
  llama_index-latest: uv pip install -U .[latest]
  dspy: uv pip install --reinstall .[test]
  dspy-latest: uv pip install -U .[latest]
  langchain: uv pip install --reinstall .[test]
  langchain-latest: uv pip install -U .[latest]
  langchain_core: uv pip install --reinstall ../.[type-check]
  guardrails: uv pip install --reinstall .[test]
  guardrails-latest: uv pip install -U .[latest]
  crewai: uv pip install --reinstall .[test]
  crewai-latest: uv pip install -U .[latest]
  haystack: uv pip install --reinstall .[test]
  haystack-latest: uv pip install -U .[latest]
  groq: uv pip install --reinstall .[test]
  groq-latest: uv pip install -U .[latest]
  litellm: uv pip install --reinstall .[test]
  litellm-latest: uv pip install -U .[latest]
  instructor: uv pip install --reinstall .[test]
  instructor-latest: uv pip install -U .[latest]
commands =
  ruff: ruff format {posargs:.}
  ruff: ruff check {posargs:.} --fix
  mypy: mypy {posargs:.}
  test: pytest -n auto {posargs:tests}
  ci: ruff format . --diff
  ci: ruff check . --no-fix
  ci: mypy .
  ci: pytest -n auto tests
