{
  "log": {
    "_recordingName": "bedrock-agent-with-traces - bedrockagentinstrumentation-trace-collector-integration---agent-attributes-and-api-recording-should-record-multiple-agents-collaboration-traces",
    "creator": {
      "comment": "persister:fs",
      "name": "Polly.JS",
      "version": "6.0.6"
    },
    "entries": [
      {
        "_id": "31585b0c69becf1cc45116617e549370",
        "_order": 0,
        "cache": {},
        "request": {
          "bodySize": 77,
          "cookies": [],
          "headers": [
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "77"
            },
            {
              "name": "x-amz-user-agent",
              "value": "aws-sdk-js/3.863.0"
            },
            {
              "name": "user-agent",
              "value": "aws-sdk-js/3.863.0 ua/2.1 os/darwin#22.6.0 lang/js md/nodejs#20.19.3 api/bedrock-agent-runtime#3.863.0 m/E,e"
            },
            {
              "name": "host",
              "value": "bedrock-agent-runtime.us-east-1.amazonaws.com"
            },
            {
              "name": "amz-sdk-invocation-id",
              "value": "f4766d41-3c88-49ba-b75a-ce95e1107cf2"
            },
            {
              "name": "amz-sdk-request",
              "value": "attempt=1; max=3"
            },
            {
              "name": "x-amz-date",
              "value": "20250811T033409Z"
            },
            {
              "name": "x-amz-content-sha256",
              "value": "d853451dce91696bad4ea8ed18b7e8b589413f806b01e0c10bc91a1872e09afc"
            }
          ],
          "headersSize": 950,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "{\"enableTrace\":true,\"inputText\":\"Find the sum of first 10 fibnonic numbers?\"}"
          },
          "queryString": [],
          "url": "https://bedrock-agent-runtime.us-east-1.amazonaws.com/agents/2X9SRVPLWB/agentAliases/KUXISKYLTT/sessions/default-session1_1234567893/text"
        },
        "response": {
          "bodySize": 118260,
          "content": {
            "encoding": "base64",
            "mimeType": "application/vnd.amazon.eventstream",
            "size": 118260,
            "text": ""
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Mon, 11 Aug 2025 03:34:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/vnd.amazon.eventstream"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "keep-alive"
            },
            {
              "name": "x-amzn-requestid",
              "value": "9471c555-66b3-4197-95f5-0e8d358d9f60"
            },
            {
              "name": "x-amz-bedrock-agent-session-id",
              "value": "default-session1_1234567893"
            },
            {
              "name": "x-amzn-bedrock-agent-content-type",
              "value": "application/json"
            }
          ],
          "headersSize": 311,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2025-08-11T03:34:09.229Z",
        "time": 21665,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 21665
        }
      }
    ],
    "pages": [],
    "version": "1.2"
  }
}
