on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: release

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      paths_released: ${{ steps.release.outputs.paths_released }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release

  publish:
    name: Publish Python distribution
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.releases_created == 'true' }}
    strategy:
      fail-fast: false
      matrix:
        path: ${{ fromJSON(needs.release.outputs.paths_released) }}
    defaults:
      run:
        working-directory: ${{ matrix.path }}
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: python
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install utilities
        run: python -m pip install hatch check_wheel_contents twine
      - name: Build distribution
        run: hatch build
      - name: Check wheel contents
        run: check-wheel-contents dist/*.whl
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload --skip-existing --verbose dist/*

