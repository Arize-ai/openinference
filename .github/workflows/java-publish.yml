name: Java Publish
on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag to publish (e.g., java-openinference-semantic-conventions-v0.1.0)'
        required: true
        type: string

jobs:
  publish:
    # Only run for Java releases (tags starting with 'java-')
    if: startsWith(github.event.release.tag_name, 'java-') || (github.event_name == 'workflow_dispatch' && startsWith(github.event.inputs.tag, 'java-'))
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.release.tag_name || github.event.inputs.tag }}
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    
    - name: Extract version from tag
      id: version
      run: |
        TAG="${{ github.event.release.tag_name || github.event.inputs.tag }}"
        # Extract version from tag like java-openinference-semantic-conventions-v0.1.0
        VERSION=$(echo $TAG | grep -oE 'v[0-9]+\.[0-9]+\.[0-9]+' | sed 's/v//')
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"
    
    - name: Update version in build.gradle
      working-directory: ./java
      run: |
        # Remove -SNAPSHOT suffix if present and set the release version
        sed -i "s/version = '[0-9]\+\.[0-9]\+\.[0-9]\+-SNAPSHOT'/version = '${{ steps.version.outputs.VERSION }}'/" build.gradle
        sed -i "s/version = '[0-9]\+\.[0-9]\+\.[0-9]\+'/version = '${{ steps.version.outputs.VERSION }}'/" build.gradle
        echo "Updated version in build.gradle to ${{ steps.version.outputs.VERSION }}"
    
    - name: Stage artifacts locally
      working-directory: ./java
      run: |
        ./gradlew clean publish
    
    - name: Deploy to Maven Central with JReleaser
      working-directory: ./java
      env:
        JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.JRELEASER_MAVENCENTRAL_USERNAME }}
        JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.JRELEASER_MAVENCENTRAL_PASSWORD }}
        JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
        JRELEASER_GPG_SECRETKEY: ${{ secrets.JRELEASER_GPG_SECRETKEY }}
        JRELEASER_GPG_PUBLICKEY: ${{ secrets.JRELEASER_GPG_PUBLICKEY }}
      run: |
        ./gradlew jreleaserDeploy
    
    - name: Clean up
      if: always()
      run: |
        rm -rf ./java/build/staging-deploy
